// Code generated by go-swagger; DO NOT EDIT.

package todo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"swagger_test/models"
)

// FetchTodoItemOKCode is the HTTP code returned for type FetchTodoItemOK
const FetchTodoItemOKCode int = 200

/*FetchTodoItemOK OK

swagger:response fetchTodoItemOK
*/
type FetchTodoItemOK struct {

	/*
	  In: Body
	*/
	Payload *models.Item `json:"body,omitempty"`
}

// NewFetchTodoItemOK creates FetchTodoItemOK with default headers values
func NewFetchTodoItemOK() *FetchTodoItemOK {

	return &FetchTodoItemOK{}
}

// WithPayload adds the payload to the fetch todo item o k response
func (o *FetchTodoItemOK) WithPayload(payload *models.Item) *FetchTodoItemOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch todo item o k response
func (o *FetchTodoItemOK) SetPayload(payload *models.Item) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchTodoItemOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FetchTodoItemNotFoundCode is the HTTP code returned for type FetchTodoItemNotFound
const FetchTodoItemNotFoundCode int = 404

/*FetchTodoItemNotFound Not Found

swagger:response fetchTodoItemNotFound
*/
type FetchTodoItemNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFetchTodoItemNotFound creates FetchTodoItemNotFound with default headers values
func NewFetchTodoItemNotFound() *FetchTodoItemNotFound {

	return &FetchTodoItemNotFound{}
}

// WithPayload adds the payload to the fetch todo item not found response
func (o *FetchTodoItemNotFound) WithPayload(payload *models.Error) *FetchTodoItemNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch todo item not found response
func (o *FetchTodoItemNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchTodoItemNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FetchTodoItemInternalServerErrorCode is the HTTP code returned for type FetchTodoItemInternalServerError
const FetchTodoItemInternalServerErrorCode int = 500

/*FetchTodoItemInternalServerError error

swagger:response fetchTodoItemInternalServerError
*/
type FetchTodoItemInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFetchTodoItemInternalServerError creates FetchTodoItemInternalServerError with default headers values
func NewFetchTodoItemInternalServerError() *FetchTodoItemInternalServerError {

	return &FetchTodoItemInternalServerError{}
}

// WithPayload adds the payload to the fetch todo item internal server error response
func (o *FetchTodoItemInternalServerError) WithPayload(payload *models.Error) *FetchTodoItemInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch todo item internal server error response
func (o *FetchTodoItemInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchTodoItemInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
