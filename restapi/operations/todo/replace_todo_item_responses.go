// Code generated by go-swagger; DO NOT EDIT.

package todo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"swagger_test/models"
)

// ReplaceTodoItemOKCode is the HTTP code returned for type ReplaceTodoItemOK
const ReplaceTodoItemOKCode int = 200

/*ReplaceTodoItemOK OK

swagger:response replaceTodoItemOK
*/
type ReplaceTodoItemOK struct {

	/*
	  In: Body
	*/
	Payload *models.Item `json:"body,omitempty"`
}

// NewReplaceTodoItemOK creates ReplaceTodoItemOK with default headers values
func NewReplaceTodoItemOK() *ReplaceTodoItemOK {

	return &ReplaceTodoItemOK{}
}

// WithPayload adds the payload to the replace todo item o k response
func (o *ReplaceTodoItemOK) WithPayload(payload *models.Item) *ReplaceTodoItemOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace todo item o k response
func (o *ReplaceTodoItemOK) SetPayload(payload *models.Item) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceTodoItemOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceTodoItemNotFoundCode is the HTTP code returned for type ReplaceTodoItemNotFound
const ReplaceTodoItemNotFoundCode int = 404

/*ReplaceTodoItemNotFound Not Found

swagger:response replaceTodoItemNotFound
*/
type ReplaceTodoItemNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceTodoItemNotFound creates ReplaceTodoItemNotFound with default headers values
func NewReplaceTodoItemNotFound() *ReplaceTodoItemNotFound {

	return &ReplaceTodoItemNotFound{}
}

// WithPayload adds the payload to the replace todo item not found response
func (o *ReplaceTodoItemNotFound) WithPayload(payload *models.Error) *ReplaceTodoItemNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace todo item not found response
func (o *ReplaceTodoItemNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceTodoItemNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceTodoItemInternalServerErrorCode is the HTTP code returned for type ReplaceTodoItemInternalServerError
const ReplaceTodoItemInternalServerErrorCode int = 500

/*ReplaceTodoItemInternalServerError error

swagger:response replaceTodoItemInternalServerError
*/
type ReplaceTodoItemInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceTodoItemInternalServerError creates ReplaceTodoItemInternalServerError with default headers values
func NewReplaceTodoItemInternalServerError() *ReplaceTodoItemInternalServerError {

	return &ReplaceTodoItemInternalServerError{}
}

// WithPayload adds the payload to the replace todo item internal server error response
func (o *ReplaceTodoItemInternalServerError) WithPayload(payload *models.Error) *ReplaceTodoItemInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace todo item internal server error response
func (o *ReplaceTodoItemInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceTodoItemInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
