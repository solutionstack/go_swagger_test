// Code generated by go-swagger; DO NOT EDIT.

package todo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"swagger_test/models"
)

// FetchTodoItemsOKCode is the HTTP code returned for type FetchTodoItemsOK
const FetchTodoItemsOKCode int = 200

/*FetchTodoItemsOK fetch todo items

swagger:response fetchTodoItemsOK
*/
type FetchTodoItemsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Item `json:"body,omitempty"`
}

// NewFetchTodoItemsOK creates FetchTodoItemsOK with default headers values
func NewFetchTodoItemsOK() *FetchTodoItemsOK {

	return &FetchTodoItemsOK{}
}

// WithPayload adds the payload to the fetch todo items o k response
func (o *FetchTodoItemsOK) WithPayload(payload []*models.Item) *FetchTodoItemsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch todo items o k response
func (o *FetchTodoItemsOK) SetPayload(payload []*models.Item) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchTodoItemsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Item, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// FetchTodoItemsInternalServerErrorCode is the HTTP code returned for type FetchTodoItemsInternalServerError
const FetchTodoItemsInternalServerErrorCode int = 500

/*FetchTodoItemsInternalServerError error occured

swagger:response fetchTodoItemsInternalServerError
*/
type FetchTodoItemsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFetchTodoItemsInternalServerError creates FetchTodoItemsInternalServerError with default headers values
func NewFetchTodoItemsInternalServerError() *FetchTodoItemsInternalServerError {

	return &FetchTodoItemsInternalServerError{}
}

// WithPayload adds the payload to the fetch todo items internal server error response
func (o *FetchTodoItemsInternalServerError) WithPayload(payload *models.Error) *FetchTodoItemsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the fetch todo items internal server error response
func (o *FetchTodoItemsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FetchTodoItemsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
